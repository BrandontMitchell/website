{"version":3,"sources":["components/Header.js","components/Home.js","components/About.js","components/Hobbies.js","components/TerminalApp.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","maxWidth","minWidth","textAlign","alignContent","head","backgroundImage","media","float","width","info","marginRight","icons","padding","Header","classes","react_default","a","createElement","className","alt","border","src","Button","href","index_es","icon","size","style","color","download","faFileAlt","Home","About","Hobbies","TerminalApp","display","justifyContent","alignItems","height","js_default","backgroundColor","barColor","fontWeight","fontSize","commands","open-google","window","open","showmsg","popup","alert","descriptions","msg","TabPanel","props","children","value","index","other","Object","objectWithoutProperties","Typography","assign","component","role","hidden","id","concat","aria-labelledby","Box","p","a11yProps","aria-controls","theme","root","flexGrow","NavBar","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","centered","onChange","event","newValue","variant","textColor","inicatorColor","aria-label","Tab","label","Home_default","Person_default","Favorite_default","Computer_default","components_Header","components_Home","components_About","components_Hobbies","components_TerminalApp","library","add","fab","App","components_NavBar","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccabbd06.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Header.css';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 345,\r\n        minWidth: 300,\r\n        textAlign: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    head: {\r\n        backgroundImage: 'linear-gradient(#ffebee, #bbdefb)'\r\n    },\r\n    media: {\r\n        float: 'left',\r\n        width: 200\r\n    },\r\n    info: {\r\n        textAlign: 'center',\r\n        marginRight: '50px'\r\n    },\r\n    icons: {\r\n        padding: '15px',\r\n    }\r\n    \r\n});\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.head}>\r\n            <div className={\r\n                classes.media\r\n            }>\r\n                <img alt=\"headshot\" border=\"0\" src=\"https://i.ibb.co/vqXKQBf/headshot.png\" width=\"200\"/>\r\n            </div>\r\n            <div className={\r\n                classes.info\r\n            }>\r\n                <div>\r\n                    <h1>Brandon Mitchell</h1>\r\n                    <div className={classes.icons}>\r\n                        <Button href=\"https://github.com/BrandontMitchell\">\r\n                            <div className=\"spotify\">\r\n                        <FontAwesomeIcon icon={\r\n                            ['fab', 'github-square']\r\n                        }\r\n                        size=\"4x\"\r\n                        style={{color: \"#000\"}}/>\r\n                        \r\n                        </div>\r\n                        </Button>\r\n                        <Button href=\"https://www.flickr.com/photos/182839985@N04/\">\r\n                         <FontAwesomeIcon icon={\r\n                             ['fab', 'linkedin']\r\n                         }\r\n                         size=\"4x\"\r\n                         style={{color: '#0063dc'}}/>\r\n                         </Button>\r\n                         <Button href=\"https://open.spotify.com/show/4x5t8ruHBJ6by93IHrUfFN\">\r\n                         <FontAwesomeIcon icon={\r\n                             ['fab', 'spotify']\r\n                         }\r\n                         size=\"4x\"\r\n                         style={{color: \"#1DB954\"}}/>\r\n                         </Button>\r\n                         <Button href=\"https://www.flickr.com/photos/182839985@N04/\">\r\n                         <FontAwesomeIcon icon={\r\n                             ['fab', 'flickr']\r\n                         }\r\n                         size=\"4x\"\r\n                         style={{color: '#ff0084'}}/>\r\n                         </Button>\r\n                         <Button href=\"./bmitchell_resume_vf.pdf\" download>\r\n                         <FontAwesomeIcon icon={faFileAlt}\r\n                         size=\"4x\"\r\n                         style={{color: '#fff'}}/>\r\n                         </Button>\r\n                         </div>\r\n                         </div>\r\n                         </div>\r\n                         <div>\r\n                             <br/><br/><br/><br/><br/><br/>\r\n                         </div>\r\n                \r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return <div>test</div>;\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return <div>about page</div>;\r\n\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Hobbies = () => {\r\n    return <div>hobbies</div>;\r\n\r\n};\r\n\r\nexport default Hobbies;","import React from 'react';\r\nimport Terminal from 'terminal-in-react';\r\n\r\nconst TerminalApp = () => {\r\n    const showMsg = () => 'hi im stuff';\r\n    return (\r\n        <div style={\r\n            {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\"\r\n            }\r\n        }>\r\n            <Terminal color='green' backgroundColor='black' barColor='black'\r\n                style={\r\n                    {\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"1em\"\r\n                    }\r\n                }\r\n                commands={\r\n                    {\r\n                        'open-google': () => window.open('google.com', '_blank'),\r\n                        showmsg: showMsg,\r\n                        popup: () => alert('Terminal in React')\r\n                    }\r\n                }\r\n                descriptions={\r\n                    {\r\n                        'open-google': 'opens google.com',\r\n                        showmsg: 'shows a message',\r\n                        alert: 'alert',\r\n                        popup: 'alert'\r\n                    }\r\n                }\r\n                msg='Hello World! type help for list of commands'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TerminalApp;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Hobbies from './Hobbies';\r\nimport TerminalApp from './TerminalApp';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nfunction TabPanel(props) {\r\n    const {\r\n        children,\r\n        value,\r\n        index,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <div style={\r\n            {backgroundColor: \"#e0e2e6\"}\r\n        }>\r\n            <Typography component=\"div\" role=\"tabpanel\"\r\n                hidden={\r\n                    value !== index\r\n                }\r\n                id={\r\n                    `simple-tabpanel-${index}`\r\n                }\r\n                aria-labelledby={\r\n                    `simple-tab-${index}`\r\n                }\r\n                {...other}>\r\n                <Box p={4}>\r\n                    {children}</Box>\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}`};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            classes.root\r\n        }>\r\n            <AppBar position=\"static\">\r\n                <Tabs centered='true'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"fullWidth\"\r\n                    textColor=\"inherit\"\r\n                    inicatorColor=\"secondary\"\r\n                    aria-label=\"simpicon label tabs example\">\r\n                    <Tab label=\"Home\" icon={<HomeIcon />}{...a11yProps(0)}/>\r\n                    <Tab label=\"About\" icon={<PersonIcon />} {...a11yProps(1)}/>\r\n                    <Tab label=\"Hobbies\" icon={<FavoriteIcon />} {...a11yProps(2)}/>\r\n                    <Tab label=\"Hack\" icon={<ComputerIcon />} {...a11yProps(3)}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value}\r\n                index={0}>\r\n                <Header/>\r\n                <Home />\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                index={1}>\r\n                <Header/>\r\n                <About />\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                index={2}>\r\n                <Header/>\r\n                <Hobbies />\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                index={3}>\r\n                <Header/>\r\n                <TerminalApp/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nlibrary.add(fab)\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// #00205b\t(0,32,91)\r\n// #7c7e7f\t(124,126,127)\r\n// #adc7dc\t(173,199,220)\r\n// #e0e2e6\t(224,226,230)\r\n// #9fddf9\t(159,221,249)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}